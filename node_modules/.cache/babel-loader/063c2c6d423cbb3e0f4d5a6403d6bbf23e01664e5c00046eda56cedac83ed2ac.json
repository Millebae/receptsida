{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/foodies/src/components/Buttons/SearchBtn.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FoodContext from \"../../context/FoodContext/FoodContext\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nclass ContainedButtons extends Component {\n  constructor(props) {\n    super(props);\n    // this.state = { meals: null };\n    // This is where we'll do all the API Calls\n    this.clickHandler = () => {\n      // Runs when big blue search button is pressed\n      let query = this.props.searchVal;\n      if (query !== null) {\n        this.context.updateLoading(true);\n        axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`).then(res => {\n          let meals = res.data.meals; // array of objects\n          this.setState({\n            meals: meals\n          });\n          this.context.updateMeals({\n            meals: meals\n          });\n          this.context.updateLoading(false);\n        });\n      }\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.filterVal !== this.props.filterVal || prevProps.isPressed !== this.props.isPressed) {\n      // Runs if enter is pressed after search\n      if (this.props.isPressed) {\n        this.clickHandler();\n      }\n      // Runs each time an item in dropdown is selected\n      let cQuery = this.props.filterVal.category;\n      let aQuery = this.props.filterVal.area;\n      if (cQuery !== null) {\n        this.context.updateLoading(true);\n        axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${cQuery}`).then(res => {\n          this.setState({\n            meals: res.data.meals\n          });\n          this.context.updateMeals({\n            meals: res.data.meals\n          });\n          this.context.updateLoading(false);\n        });\n      } else if (aQuery !== null) {\n        this.context.updateLoading(true);\n        axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${aQuery}`).then(res => {\n          this.setState({\n            meals: res.data.meals\n          });\n          this.context.updateMeals({\n            meals: res.data.meals\n          });\n          this.context.updateLoading(false);\n        });\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 ml-2 sm:mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.clickHandler,\n      variant: \"contained\",\n      className: \"w-32 h-12 sm:w-48\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), \" Search\"));\n  }\n}\nContainedButtons.contextType = FoodContext;\nexport default ContainedButtons;","map":{"version":3,"names":["React","Component","axios","FoodContext","Button","SearchIcon","ContainedButtons","constructor","props","clickHandler","query","searchVal","context","updateLoading","get","then","res","meals","data","setState","updateMeals","bind","componentDidUpdate","prevProps","prevState","filterVal","isPressed","cQuery","category","aQuery","area","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","color","contextType"],"sources":["/Users/admin/Desktop/foodies/src/components/Buttons/SearchBtn.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport FoodContext from \"../../context/FoodContext/FoodContext\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nclass ContainedButtons extends Component {\n    constructor(props) {\n        super(props);\n        // this.state = { meals: null };\n\n        this.clickHandler = this.clickHandler.bind(this);\n    }\n\n    // This is where we'll do all the API Calls\n    clickHandler = () => {\n        // Runs when big blue search button is pressed\n        let query = this.props.searchVal;\n\n        if (query !== null) {\n            this.context.updateLoading(true);\n\n            axios\n                .get(\n                    `https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`\n                )\n                .then((res) => {\n                    let meals = res.data.meals; // array of objects\n                    this.setState({ meals: meals });\n                    this.context.updateMeals({ meals: meals });\n                    this.context.updateLoading(false);\n                });\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevProps.filterVal !== this.props.filterVal ||\n            prevProps.isPressed !== this.props.isPressed\n        ) {\n            // Runs if enter is pressed after search\n            if (this.props.isPressed) {\n                this.clickHandler();\n            }\n            // Runs each time an item in dropdown is selected\n            let cQuery = this.props.filterVal.category;\n            let aQuery = this.props.filterVal.area;\n\n            if (cQuery !== null) {\n                this.context.updateLoading(true);\n                axios\n                    .get(\n                        `https://www.themealdb.com/api/json/v1/1/filter.php?c=${cQuery}`\n                    )\n                    .then((res) => {\n                        this.setState({\n                            meals: res.data.meals,\n                        });\n                        this.context.updateMeals({\n                            meals: res.data.meals,\n                        });\n                        this.context.updateLoading(false);\n                    });\n            } else if (aQuery !== null) {\n                this.context.updateLoading(true);\n                axios\n                    .get(\n                        `https://www.themealdb.com/api/json/v1/1/filter.php?a=${aQuery}`\n                    )\n                    .then((res) => {\n                        this.setState({ meals: res.data.meals });\n                        this.context.updateMeals({ meals: res.data.meals });\n                        this.context.updateLoading(false);\n                    });\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"mt-5 ml-2 sm:mx-auto\">\n                <Button\n                    onClick={this.clickHandler}\n                    variant=\"contained\"\n                    className=\"w-32 h-12 sm:w-48\"\n                    color=\"primary\"\n                >\n                    <SearchIcon /> Search\n                </Button>\n            </div>\n        );\n    }\n}\n\nContainedButtons.contextType = FoodContext;\n\nexport default ContainedButtons;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}